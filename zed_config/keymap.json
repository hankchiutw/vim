// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      "\\ f": "file_finder::Toggle",
      "\\ w": "tab_switcher::Toggle",
      "shift shift": "workspace::ToggleZoom",
      "\\ g": ["workspace::SendKeystrokes", "cmd-shift-f enter"] // search across files
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "d": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "shift-cmd-c": "editor::CopyRelativePath",
      // code navigation
      "ctrl-j": "editor::GoToDefinition",
      // code editing
      "\\ c": "editor::ToggleComments",
      "\\ x": "editor::Format",
      "ctrl-w ctrl-e": "workspace::Save"
    }
  },
  {
    "context": "Editor && vim_mode!=insert && mode!=single_line",
    "bindings": {
      // code navigation
      ", .": "editor::GoToHunk",
      ". ,": "editor::GoToPrevHunk",
      ", ,": "editor::GoToDiagnostic",
      ". .": "editor::GoToPrevDiagnostic",
      // hunk
      ", a": "editor::ToggleHunkDiff",
      ", A": "editor::ExpandAllHunkDiffs",
      ", u": "editor::RevertSelectedHunks",
      ", s": "editor::ApplyDiffHunk" // ? not sure it's effect
      // code search
      // "g o": ["workspace::SendKeystrokes", "cmd-shift-f enter"] // search current word across files
    }
  },
  {
    "context": "Editor && (showing_completions || showing_code_actions)",
    "bindings": {
      "ctrl-j": "editor::ContextMenuNext",
      "ctrl-k": "editor::ContextMenuPrev"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "shift-cmd-c": "project_panel::CopyRelativePath",
      "r": "project_panel::Rename",
      "l": "project_panel::OpenPermanent",
      "n": "project_panel::NewFile",
      "m": "project_panel::NewDirectory",
      "/": "project_panel::NewSearchInDirectory"
    }
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {
      "escape": "pane::CloseActiveItem"
    }
  },
  {
    "context": "VimControl && !menu && vim_mode!=insert",
    "bindings": {
      "space": "editor::SelectLargerSyntaxNode",
      "shift-space": "editor::SelectSmallerSyntaxNode",
      "enter": "editor::OpenExcerpts",
      "n": "search::SelectNextMatch",
      "N": "search::SelectPrevMatch",
      "q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "VimControl && !menu && vim_mode != operator",
    "bindings": {
      "w": "vim::NextSubwordStart",
      "b": "vim::PreviousSubwordStart",
      "e": "vim::NextSubwordEnd",
      "g e": "vim::PreviousSubwordEnd"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-s": [
        "vim::PushOperator",
        {
          "AddSurrounds": {}
        }
      ]
    }
  },
  {
    "context": "KeyContextView",
    "bindings": {
      "q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-w ctrl-l": "workspace::ActivateNextPane",
      "ctrl-w ctrl-h": "workspace::ActivatePreviousPane",
      "cmd-e": "pane::CloseActiveItem"
    }
  },
  {
    "bindings": {
      // panel navigation
      "\\ e": "project_panel::ToggleFocus",
      "\\ a": "assistant::ToggleFocus",
      "\\ o": "workspace::ToggleLeftDock",
      "ctrl-w ctrl-i": "terminal_panel::ToggleFocus",
      "ctrl-w l": "pane::SplitRight",
      "ctrl-w j": "pane::SplitDown",
      "ctrl-i": "workspace::ToggleBottomDock",
      "ctrl-/": "workspace::NewTerminal",
      // buffer navigation
      "ctrl-l": "pane::ActivateNextItem",
      "ctrl-h": "pane::ActivatePrevItem",
      // common navigation
      "ctrl-j": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrev"
    }
  }
]
// TODO: code context at head
